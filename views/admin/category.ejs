<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" type="text/css" >

<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Categories</h2>
    
       
        </div>
        <div class="d-grid">
          <a href="/admin/unlisted-category"><button  class="btn btn-primary">Unlisted Category</button></a>  
        </div>
        </div>
        <div>
            <input type="text" placeholder="Search Categories" class="form-control bg-white" id="categorySearch">
        </div>
        <% if(message.success)	{ %>
            <div class="alert alert-success" role="alert">
                <%= message.success %>
            </div>
            <% } %>
            
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <form action="/admin/add-category" method="post" enctype="multipart/form-data">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Name</label>
                            <input name="categoryName" placeholder="Type here" class="form-control" id="product_name"/>
                        </div>
                        <span  id="selectedImage">

                        </span>
                        <div class="mb-4">
                           
                            <label for="product_name" class="form-label">Images</label>
                            <input type="file" id="image" name="images" accept="image/*" onchange="showSelectedImage(this)"> 
                        </div>

                        <div>
                            
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Create category</button>
                        </div>
                       
                    </form>
                </div>
                <div class="col-md-9">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th><b>No</b></th>
                                    <th><b>Name</b></th>
                                    <th><b>images</b></th>
                                    <th><b>Id</b></th>
                                    <th class="text-end"><b>Action</b></th>
                                </tr>
                            </thead>
                            <tbody>
                                <% categories.forEach((category, index) => { %>
                                <tr data-category="<%= category.CategoryName %>">
                                    <td><%= index + 1 %></td>
                                    <td><b><%= category.CategoryName %></b></td>
                                    <td><img style="width: 50px;height: 50px;" src="/uploads/category_images/<%=category.CategoryImage  %>" alt=""></td>
                                    <td><%= category._id %></td>
                                    <td class="text-end">
                                        <div class="dropdown">
                                            <a href="#" data-bs-toggle="dropdown" class="btn btn-light rounded btn-sm font-sm"> <i class="material-icons md-more_horiz"></i> </a>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item" data-category-name="<%= category.CategoryName %>" href="/admin/edit-category?categoryId=<%= category._id %>">Edit info</a>
                                                <a class="dropdown-item text-danger" onclick="deleteCategory('<%= category._id %>')" href="/admin/delete-category">Delete</a>
                                            </div>
                                        </div> <!-- dropdown //end -->
                                    </td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div> <!-- .col// -->
            </div> <!-- .row // -->
        </div> <!-- card body .// -->
    </div> <!-- card .// -->

    <script>
        function deleteCategory(categoryId) {
            event.preventDefault();
            swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this imaginary file!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            }).then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        url: '/admin/delete-category',
                        method: 'patch',
                        data: { categoryId },
                        success: (response) => {
                            swal("Poof! Your imaginary file has been unlisted", {
                                icon: "success",
                            }).then(() => {
                                location.reload();
                            });
                        }
                    });
                } else {
                    swal("Your imaginary file is safe!");
                }
            });
        }
    </script>
    
    <script>

        function searchCategories() {
            const input = document.getElementById('categorySearch');
            const filter = input.value.toUpperCase();
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const category = row.getAttribute('data-category');
                if (category.toUpperCase().indexOf(filter) > -1) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
    </script>
    <script>
        const searchInput = document.getElementById('categorySearch');
        searchInput.addEventListener('input', searchCategories);
    </script>

<script>
    function showSelectedImage(input) {
      const span = document.getElementById('selectedImage');
      if (input.files && input.files[0]) {
        const file = input.files[0];
        if (file.type.match('image/*')) {
          const reader = new FileReader();
          reader.onload = function(e) {
            span.innerHTML = `<img style="width: 50px;height: 50px;" src="${e.target.result}" alt="">`;
          };
          reader.readAsDataURL(file);
        } else {
          span.innerHTML = 'Only image files are allowed.';
          input.value = ''; // Clear the selected file
        }
      } else {
        span.innerHTML = '';
      }
    }
  </script>
</section>
<!-- <script>
    function showSelectedImage(input) {
  if (input.files && input.files[0]) {
    const reader = new FileReader();

    reader.onload = function(e) {
      const image = document.getElementById('croppedImage');
      image.src = e.target.result;

      const cropper = new Cropper(image, {
        aspectRatio: 1, // Set the desired aspect ratio for cropping (e.g., 1 for square)
        viewMode: 1, // Define the cropper's behavior regarding the container (0: unrestricted, 1: contained, 2: cropped)
        guides: true, // Display guides for better visual cropping
        autoCropArea: 0.8, // Define the initial cropping area size as a percentage of the image
        movable: false, // Disable moving the cropping area
        zoomable: false, // Disable zooming the image
        rotatable: false, // Disable rotating the image
        scalable: false // Disable scaling the cropping area
      });

      // When the user submits the form, retrieve the cropped data
      document.querySelector('form').addEventListener('submit', function(event) {
        event.preventDefault();
        
        const canvas = cropper.getCroppedCanvas();
        const croppedImageDataURL = canvas.toDataURL(); // Get the cropped image as a data URL
        
        // Attach the cropped image data to a hidden input field or use it as needed
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'croppedImage';
        hiddenInput.value = croppedImageDataURL;
        this.appendChild(hiddenInput);

        // Submit the form
        this.submit();
      });
    };

    reader.readAsDataURL(input.files[0]);
  }
}

</script> -->